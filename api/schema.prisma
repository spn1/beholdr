// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(uuid()) @postgresql.Uuid
  name      String    @default("")
  email     String    @unique @default("")
  password  String
  createdAt DateTime? @default(now())
  role      Role?     @relation("User_role", fields: [roleId], references: [id])
  roleId    String?   @map("role") @postgresql.Uuid

  @@index([roleId])
}

model Role {
  id              String  @id @default(uuid()) @postgresql.Uuid
  name            String  @default("")
  canViewAllUsers Boolean @default(false)
  canManageUsers  Boolean @default(false)
  from_User_role  User[]  @relation("User_role")
}

model Creature {
  id                          String         @id @default(uuid()) @postgresql.Uuid
  name                        String         @default("")
  challengeRating             Float          @default(0)
  experience                  Int            @default(0)
  createdAt                   DateTime?      @default(now())
  from_CreatureList_creatures CreatureList[] @relation("CreatureList_creatures")
  from_Encounter_creatures    Encounter[]    @relation("Encounter_creatures")
}

model CreatureList {
  id        String     @id @default(uuid()) @postgresql.Uuid
  name      String     @default("")
  creatures Creature[] @relation("CreatureList_creatures")
  createdAt DateTime?  @default(now())
}

model Encounter {
  id        String     @id @default(uuid()) @postgresql.Uuid
  name      String     @default("")
  creatures Creature[] @relation("Encounter_creatures")
  createdAt DateTime?  @default(now())
}
